Rate limit: 80 req/min

== Account ==

-- Rate limit: 5 req/min --
POST /api/v1/account/sign_in
POST /api/v1/account/sign_up
POST /api/v1/account/log_out
GET  /api/v1/account/challenge/image
GET  /api/v1/account/confirm_email/:activation_id
-- Rate limit: 5 req/min --
GET  /api/v1/account/sessions
GET  /api/v1/account/:session_id/revoke

== User ==

GET  /api/v1/user/email
GET  /api/v1/user/:user_id/info
-- Rate limit: 10 req/min --
POST /api/v1/user/change/info
POST /api/v1/user/remove_account
-- Rate limit: 10 req/min --
GET  /api/v1/user/permissions

== Media ==

GET /api/v1/media/resource/:resource_id/info
GET /api/v1/media/resource/:resource_id/:filename
PUT /api/v1/media/resource/upload/:resource_info (Rate limit: 5 req/min)

== Content ==

GET  /api/v1/content/user/:user_id/:page
GET  /api/v1/content/user/:user_id/:type/:page
GET  /api/v1/content/:content_id
POST /api/v1/content/add (Rate limit: 30 req/min)
POST /api/v1/content/remove/:content_id
POST /api/v1/content/:content_id/edit
GET  /api/v1/content/:type/all/:sort/:page

sort
[
	date.ascending,
	date.descending
]

Page 0:
{
	"total": number (total count of content made by user),
	"contents": [
		{
			"type": content type,
			"total": total count of this content type
		}
	],
	"pages": number of pages,
	"per_page": number of entries per page,
	"is_there_next_page": "true/false"
},

Page >= 1:
{
	"count": number of entries in this page,
	"entries: [ content object ]
}

== Admin ==

GET  /api/v1/admin/list/users/:page
GET  /api/v1/admin/list/users/unconfirmed_email/:page
GET  /api/v1/admin/list/user/:user_id/content/:page
POST /api/v1/admin/remove/media/resource/:resource_id
POST /api/v1/admin/remove/content/:content_id
POST /api/v1/admin/remove/user/:user_id
POST /api/v1/admin/user/:user_id/get/permissions
POST /api/v1/admin/user/:user_id/set/permissions
POST /api/v1/admin/user/:user_id/remove/permissions

== Search ==

GET  /api/v1/search/:query/:page (Rate limit: 30 req/min)

=============================================

Statuses:
BH_SUCCESS - Success
BH_ERROR - Error
BH_INAVLID_AUTHORIZATION - Authorization token is invalid
BH_BAD_JSON - Invalid JSON
BH_NOT_FOUND - 404 of the API
BH_UNKNOWN - Unknown error
BH_NOT_PERMITTED - Not permitted
BH_TOO_LARGE - Data is too large
BH_NO_DATA - No data

BH_SIGN_UP_USERNAME_TAKEN
BH_SIGN_UP_EMAIL_TAKEN
BH_SIGN_UP_IN_INVALID_FIELD
BH_SIGN_UP_CHALLENGE_FAILED
BH_SIGN_IN_EMAIL_NOT_VERIFIED
BH_SIGN_IN_USER_NOT_FOUND

BH_CONTENT_INVALID_TYPE
BH_CONTENT_INVALID_BODY
BH_CONTENT_INVALID_RESOURCE_REF

-------------------------------------

Generic response:
{
	"status": "BH_SUCCESS",
	"content": {}
}

-------------------------------------

Content types:

# Creation
{
	"type": bh.content.type,
	"content": content
}

# Receive
{
	"type": bh.content.type,
	"by_user": string (user id),
	"created_on": string (date),
	"content_id": string (content id)
	"content": content (object)
}

bh.content.type.video (editable: ["title", "description"])
{
	"title": string (max 70 char),
	"description": string (max 2000 char),
	"video": string (resource id),
	"thumbnail": string (resource id)
}

bh.content.type.game (editable: ["title"])
{
	"title": string (max 70 char),
	"original_authors": (array or null),
	"release_date": (JSON Date or null),
	"type": bh.content.game.type,
	"game": string (resource id)
}
[
	bh.content.game.type.flash_player,
	bh.content.game.type.html5
]

bh.content.type.comment (editable: ["content"])
{
	"content: string (max 2000 char)
}

bh.content.type.booru.image
{
	"tags": [ string ],
	"image": string (resource id)
}